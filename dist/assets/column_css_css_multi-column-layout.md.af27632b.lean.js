import{_ as r,a as t}from"./chunks/CopyRight.vue_vue_type_script_setup_true_lang.67549825.js";import{_ as i}from"./chunks/CodePen.vue_vue_type_script_setup_true_lang.a566a0de.js";import{_ as d,C as u,o as E,c as y,H as a,w as o,Q as b,k as s,a as n}from"./chunks/framework.27021b64.js";const V=JSON.parse('{"title":"CSS 多列布局：全面解析与实践指南","description":"","frontmatter":{},"headers":[],"relativePath":"column/css/css/multi-column-layout.md","filePath":"column/css/css/multi-column-layout.md","lastUpdated":1693985159000}'),h={name:"column/css/css/multi-column-layout.md"},m=b("",38),C=s("p",null,[n("注意：避免同时使用 "),s("code",null,"break-after"),n("和"),s("code",null,"break-before"),n("，因为可能导致列数增加。")],-1),k=s("h3",{id:"_2、避免内部元素分割",tabindex:"-1"},[n("2、避免内部元素分割 "),s("a",{class:"header-anchor",href:"#_2、避免内部元素分割","aria-label":'Permalink to "2、避免内部元素分割"'},"​")],-1),g=s("p",null,"在这个例子中：",-1),v=s("p",null,"Item 1、Item 2 和 Item 3 都设置了 break-inside: avoid;，所以浏览器会尽量避免在这些元素内部进行列断开。",-1),F=s("p",null,"Item 4 由于其高度（400px）大于容器的高度（300px），即使设置了 break-inside: avoid;，它也会被分割到不同的列中。",-1),_=s("p",null,"这个例子展示了即使使用了 break-inside: avoid;，如果元素太大或有其他布局限制（如容器高度），元素仍然可能会被分割到不同的列。",-1),f=s("p",null,"如果不想让Item 4内部分割到不同的列，可以移除 容器高度300px。",-1);function q(B,x,w,S,P,A){const l=i,p=r,e=u("ClientOnly"),c=t;return E(),y("div",null,[m,a(l,{id:"QWzGmyL",title:"多列布局（CSS Multi-column Layout）"}),C,k,a(l,{id:"VwqmXmx",title:"多列布局-避免内部元素分割"}),g,v,F,_,f,a(e,null,{default:o(()=>[a(p)]),_:1}),a(e,null,{default:o(()=>[a(c)]),_:1})])}const $=d(h,[["render",q]]);export{V as __pageData,$ as default};
