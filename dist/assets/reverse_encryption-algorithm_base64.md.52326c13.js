import{_ as o,a as e}from"./chunks/CopyRight.vue_vue_type_script_setup_true_lang.67549825.js";import{_ as c,C as r,o as t,c as y,H as s,w as a,Q as E}from"./chunks/framework.27021b64.js";const g=JSON.parse('{"title":"JS逆向之 Base64 加密算法特征全方位解析","description":"","frontmatter":{},"headers":[],"relativePath":"reverse/encryption-algorithm/base64.md","filePath":"reverse/encryption-algorithm/base64.md","lastUpdated":1719219394000}'),i={name:"reverse/encryption-algorithm/base64.md"},F=E(`<h1 id="js逆向之-base64-加密算法特征全方位解析" tabindex="-1">JS逆向之 Base64 加密算法特征全方位解析 <a class="header-anchor" href="#js逆向之-base64-加密算法特征全方位解析" aria-label="Permalink to &quot;JS逆向之 Base64 加密算法特征全方位解析&quot;">​</a></h1><blockquote><p>【作者主页】：<a href="https://blog.csdn.net/studypy1024" target="_blank" rel="noreferrer">小鱼神1024</a></p><p>【擅长领域】：JS逆向、小程序逆向、AST还原、验证码突防、Python开发、浏览器插件开发、React前端开发、NestJS后端开发等等</p></blockquote><p>逆向过程中，<code>Base64</code> 加密是常见的加密算法，但是你知道：</p><ul><li><code>Base64</code> 加密算法的特征是什么？</li><li>如何多场景快速使用 <code>Base64</code> 加密算法？</li><li>如何手写 <code>Base64</code> 加密算法，了解其实现原理?</li><li>如何魔改 <code>Base64</code> 加密算法，实现自定义加密规则？</li></ul><p><code>Base64</code> 是一种常见的二进制到文本编码方法，主要用于表示传输8-bit字节码（例如图像、音频文件）等数据。其特点如下：</p><h3 id="base64特点" tabindex="-1">Base64特点 <a class="header-anchor" href="#base64特点" aria-label="Permalink to &quot;Base64特点&quot;">​</a></h3><h4 id="字符集" tabindex="-1">字符集 <a class="header-anchor" href="#字符集" aria-label="Permalink to &quot;字符集&quot;">​</a></h4><p>Base64使用64个字符来表示数据，包括大小写字母、数字和两个特殊符号。这些字符为：</p><ul><li>大写字母：A-Z（26个）</li><li>小写字母：a-z（26个）</li><li>数字：0-9（10个）</li><li>特殊符号：通常为“+”和“/”</li></ul><h4 id="加密后长度" tabindex="-1">加密后长度 <a class="header-anchor" href="#加密后长度" aria-label="Permalink to &quot;加密后长度&quot;">​</a></h4><p>为了保证数据长度是4的倍数，Base64编码通常会使用“=”字符进行填充（padding）。这就是为什么会看到加密密文末尾会有 <code>=</code> 的原因。</p><h3 id="使用内置函数-btoa-和-atob" tabindex="-1">使用内置函数 btoa 和 atob <a class="header-anchor" href="#使用内置函数-btoa-和-atob" aria-label="Permalink to &quot;使用内置函数 btoa 和 atob&quot;">​</a></h3><p>需要注意的是函数仅支持编码 <code>Latin1</code> 字符集，所以像汉字这样的字符集无法编码，需要将字符串作为 URL 进行编码后再进行 <code>Base64</code> 编码。</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 定义示例字符串</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://studypy.blog.csdn.net&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">stringChinese</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://studypy.blog.csdn.net - 小鱼神1024&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 英文字符串的Base64编码和解码</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultEncodedString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">btoa</span><span style="color:#E1E4E8;">(string);       </span><span style="color:#6A737D;">// 使用 btoa 进行Base64编码</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultDecodedString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">atob</span><span style="color:#E1E4E8;">(resultEncodedString); </span><span style="color:#6A737D;">// 使用 atob 进行Base64解码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 将Unicode字符串编码为Base64字符串</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">str</span><span style="color:#6A737D;"> - 要编码的Unicode字符串</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> - 编码后的Base64字符串</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">encodeBase64Unicode</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">str</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 使用TextEncoder将字符串编码为UTF-8字节数组</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">utf8Bytes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TextEncoder</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">encode</span><span style="color:#E1E4E8;">(str);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 将字节数组转换为字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">base64String</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">btoa</span><span style="color:#E1E4E8;">(String.fromCharCode.</span><span style="color:#B392F0;">apply</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, utf8Bytes));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> base64String;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 将Base64字符串解码为Unicode字符串</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#E1E4E8;">base64</span><span style="color:#6A737D;"> - 要解码的Base64字符串</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#B392F0;">{string}</span><span style="color:#6A737D;"> - 解码后的Unicode字符串</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">decodeBase64Unicode</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">base64</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 使用atob将Base64字符串解码为二进制字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">binaryString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">atob</span><span style="color:#E1E4E8;">(base64);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 将二进制字符串转换为Uint8Array字节数组</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">bytes</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Uint8Array</span><span style="color:#E1E4E8;">([</span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;">binaryString].</span><span style="color:#B392F0;">map</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> char.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 使用TextDecoder将字节数组解码为字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">decodedString</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">TextDecoder</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">decode</span><span style="color:#E1E4E8;">(bytes);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> decodedString;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 中文字符串的Base64编码和解码</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultEncodedChinese</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">encodeBase64Unicode</span><span style="color:#E1E4E8;">(stringChinese); </span><span style="color:#6A737D;">// 编码</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultDecodedChinese</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">decodeBase64Unicode</span><span style="color:#E1E4E8;">(resultEncodedChinese); </span><span style="color:#6A737D;">// 解码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出结果</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 英文编码值:&quot;</span><span style="color:#E1E4E8;">, resultEncodedString);  </span><span style="color:#6A737D;">// aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQ=</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 英文解码值:&quot;</span><span style="color:#E1E4E8;">, resultDecodedString);  </span><span style="color:#6A737D;">// https://studypy.blog.csdn.net</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 中文编码值:&quot;</span><span style="color:#E1E4E8;">, resultEncodedChinese); </span><span style="color:#6A737D;">// aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQgLSDlsI/psbznpZ4xMDI0</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 中文解码值:&quot;</span><span style="color:#E1E4E8;">, resultDecodedChinese); </span><span style="color:#6A737D;">// https://studypy.blog.csdn.net - 小鱼神1024</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 定义示例字符串</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://studypy.blog.csdn.net&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stringChinese</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://studypy.blog.csdn.net - 小鱼神1024&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 英文字符串的Base64编码和解码</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultEncodedString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">btoa</span><span style="color:#24292E;">(string);       </span><span style="color:#6A737D;">// 使用 btoa 进行Base64编码</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultDecodedString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">atob</span><span style="color:#24292E;">(resultEncodedString); </span><span style="color:#6A737D;">// 使用 atob 进行Base64解码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 将Unicode字符串编码为Base64字符串</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">str</span><span style="color:#6A737D;"> - 要编码的Unicode字符串</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> - 编码后的Base64字符串</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">encodeBase64Unicode</span><span style="color:#24292E;">(</span><span style="color:#E36209;">str</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 使用TextEncoder将字符串编码为UTF-8字节数组</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">utf8Bytes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TextEncoder</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">encode</span><span style="color:#24292E;">(str);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 将字节数组转换为字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">base64String</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">btoa</span><span style="color:#24292E;">(String.fromCharCode.</span><span style="color:#6F42C1;">apply</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, utf8Bytes));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> base64String;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * 将Base64字符串解码为Unicode字符串</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> </span><span style="color:#24292E;">base64</span><span style="color:#6A737D;"> - 要解码的Base64字符串</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@returns</span><span style="color:#6A737D;"> </span><span style="color:#6F42C1;">{string}</span><span style="color:#6A737D;"> - 解码后的Unicode字符串</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">decodeBase64Unicode</span><span style="color:#24292E;">(</span><span style="color:#E36209;">base64</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 使用atob将Base64字符串解码为二进制字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">binaryString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">atob</span><span style="color:#24292E;">(base64);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 将二进制字符串转换为Uint8Array字节数组</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">bytes</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Uint8Array</span><span style="color:#24292E;">([</span><span style="color:#D73A49;">...</span><span style="color:#24292E;">binaryString].</span><span style="color:#6F42C1;">map</span><span style="color:#24292E;">(</span><span style="color:#E36209;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> char.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 使用TextDecoder将字节数组解码为字符串</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">decodedString</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">TextDecoder</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">decode</span><span style="color:#24292E;">(bytes);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> decodedString;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 中文字符串的Base64编码和解码</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultEncodedChinese</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">encodeBase64Unicode</span><span style="color:#24292E;">(stringChinese); </span><span style="color:#6A737D;">// 编码</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultDecodedChinese</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">decodeBase64Unicode</span><span style="color:#24292E;">(resultEncodedChinese); </span><span style="color:#6A737D;">// 解码</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出结果</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 英文编码值:&quot;</span><span style="color:#24292E;">, resultEncodedString);  </span><span style="color:#6A737D;">// aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQ=</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 英文解码值:&quot;</span><span style="color:#24292E;">, resultDecodedString);  </span><span style="color:#6A737D;">// https://studypy.blog.csdn.net</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 中文编码值:&quot;</span><span style="color:#24292E;">, resultEncodedChinese); </span><span style="color:#6A737D;">// aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQgLSDlsI/psbznpZ4xMDI0</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 中文解码值:&quot;</span><span style="color:#24292E;">, resultDecodedChinese); </span><span style="color:#6A737D;">// https://studypy.blog.csdn.net - 小鱼神1024</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br></div></div><h3 id="使用-node-环境内置方法" tabindex="-1">使用 Node 环境内置方法 <a class="header-anchor" href="#使用-node-环境内置方法" aria-label="Permalink to &quot;使用 Node 环境内置方法&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 定义一个包含中文以及数字的示例字符串</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">stringChinese</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://studypy.blog.csdn.net - 小鱼神1024&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用Buffer对象进行Base64编码</span></span>
<span class="line"><span style="color:#6A737D;">// 1. 使用new Buffer.from()将字符串转换为Buffer对象</span></span>
<span class="line"><span style="color:#6A737D;">// 2. 调用toString(&quot;base64&quot;)方法将Buffer对象转换为Base64编码的字符串</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultEncoded</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Buffer.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(stringChinese).</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;base64&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用Buffer对象进行Base64解码</span></span>
<span class="line"><span style="color:#6A737D;">// 1. 使用new Buffer.from()将Base64编码的字符串转换为Buffer对象</span></span>
<span class="line"><span style="color:#6A737D;">// 2. 调用toString()方法将Buffer对象转换回原始字符串</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultDecoded</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> Buffer.</span><span style="color:#B392F0;">from</span><span style="color:#E1E4E8;">(resultEncoded, </span><span style="color:#9ECBFF;">&quot;base64&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64编码值</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 编码值:&quot;</span><span style="color:#E1E4E8;">, resultEncoded);  </span><span style="color:#6A737D;">// 输出: aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQgLSDlsI/psbznpZ4xMDI0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64解码值</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 解码值:&quot;</span><span style="color:#E1E4E8;">, resultDecoded);  </span><span style="color:#6A737D;">// 输出: https://studypy.blog.csdn.net - 小鱼神1024</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 定义一个包含中文以及数字的示例字符串</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stringChinese</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://studypy.blog.csdn.net - 小鱼神1024&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用Buffer对象进行Base64编码</span></span>
<span class="line"><span style="color:#6A737D;">// 1. 使用new Buffer.from()将字符串转换为Buffer对象</span></span>
<span class="line"><span style="color:#6A737D;">// 2. 调用toString(&quot;base64&quot;)方法将Buffer对象转换为Base64编码的字符串</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultEncoded</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Buffer.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(stringChinese).</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;base64&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用Buffer对象进行Base64解码</span></span>
<span class="line"><span style="color:#6A737D;">// 1. 使用new Buffer.from()将Base64编码的字符串转换为Buffer对象</span></span>
<span class="line"><span style="color:#6A737D;">// 2. 调用toString()方法将Buffer对象转换回原始字符串</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultDecoded</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> Buffer.</span><span style="color:#6F42C1;">from</span><span style="color:#24292E;">(resultEncoded, </span><span style="color:#032F62;">&quot;base64&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64编码值</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 编码值:&quot;</span><span style="color:#24292E;">, resultEncoded);  </span><span style="color:#6A737D;">// 输出: aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQgLSDlsI/psbznpZ4xMDI0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64解码值</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 解码值:&quot;</span><span style="color:#24292E;">, resultDecoded);  </span><span style="color:#6A737D;">// 输出: https://studypy.blog.csdn.net - 小鱼神1024</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h3 id="使用第三方库-crypto-js" tabindex="-1">使用第三方库 crypto-js <a class="header-anchor" href="#使用第三方库-crypto-js" aria-label="Permalink to &quot;使用第三方库 crypto-js&quot;">​</a></h3><p>首先，你需要确保你已经安装了 crypto-js 库。如果没有安装，可以使用 npm 命令进行安装：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">npm install crypto</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">npm install crypto</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 引入crypto-js库</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CryptoJS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;crypto-js&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 定义一个包含中文以及数字的示例字符串</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">stringChinese</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://studypy.blog.csdn.net - 小鱼神1024&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用CryptoJS进行Base64编码</span></span>
<span class="line"><span style="color:#6A737D;">// 1. CryptoJS.enc.Utf8.parse(stringChinese) 将字符串转换为WordArray对象，这个对象是CryptoJS内部的字节数组表示形式</span></span>
<span class="line"><span style="color:#6A737D;">// 2. CryptoJS.enc.Base64.stringify() 方法将WordArray对象转换为Base64编码字符串</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultEncoded</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> CryptoJS.enc.Base64.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(CryptoJS.enc.Utf8.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(stringChinese));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用CryptoJS进行Base64解码</span></span>
<span class="line"><span style="color:#6A737D;">// 1. CryptoJS.enc.Base64.parse(resultEncoded) 将Base64编码字符串转换为WordArray对象</span></span>
<span class="line"><span style="color:#6A737D;">// 2. CryptoJS.enc.Utf8.stringify() 方法将WordArray对象转换回原始字符串</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">resultDecoded</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> CryptoJS.enc.Utf8.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(CryptoJS.enc.Base64.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(resultEncoded));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64编码值</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 编码值:&quot;</span><span style="color:#E1E4E8;">, resultEncoded);  </span><span style="color:#6A737D;">// 输出: aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQgLSDlsI/psbznpZ4xMDI0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64解码值</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 解码值:&quot;</span><span style="color:#E1E4E8;">, resultDecoded);  </span><span style="color:#6A737D;">// 输出: https://studypy.blog.csdn.net - 小鱼神1024</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 引入crypto-js库</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CryptoJS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;crypto-js&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 定义一个包含中文以及数字的示例字符串</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stringChinese</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://studypy.blog.csdn.net - 小鱼神1024&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用CryptoJS进行Base64编码</span></span>
<span class="line"><span style="color:#6A737D;">// 1. CryptoJS.enc.Utf8.parse(stringChinese) 将字符串转换为WordArray对象，这个对象是CryptoJS内部的字节数组表示形式</span></span>
<span class="line"><span style="color:#6A737D;">// 2. CryptoJS.enc.Base64.stringify() 方法将WordArray对象转换为Base64编码字符串</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultEncoded</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> CryptoJS.enc.Base64.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(CryptoJS.enc.Utf8.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(stringChinese));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 使用CryptoJS进行Base64解码</span></span>
<span class="line"><span style="color:#6A737D;">// 1. CryptoJS.enc.Base64.parse(resultEncoded) 将Base64编码字符串转换为WordArray对象</span></span>
<span class="line"><span style="color:#6A737D;">// 2. CryptoJS.enc.Utf8.stringify() 方法将WordArray对象转换回原始字符串</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">resultDecoded</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> CryptoJS.enc.Utf8.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(CryptoJS.enc.Base64.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(resultEncoded));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64编码值</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 编码值:&quot;</span><span style="color:#24292E;">, resultEncoded);  </span><span style="color:#6A737D;">// 输出: aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQgLSDlsI/psbznpZ4xMDI0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64解码值</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 解码值:&quot;</span><span style="color:#24292E;">, resultDecoded);  </span><span style="color:#6A737D;">// 输出: https://studypy.blog.csdn.net - 小鱼神1024</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h3 id="纯源码实现" tabindex="-1">纯源码实现 <a class="header-anchor" href="#纯源码实现" aria-label="Permalink to &quot;纯源码实现&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 定义一个Base64对象，包含编码、解码以及UTF-8编码和解码的方法</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> Base64 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Base64字符表，用于编码和解码过程中各索引值的对应字符</span></span>
<span class="line"><span style="color:#E1E4E8;">    _keyStr: </span><span style="color:#9ECBFF;">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 将输入字符串进行Base64编码的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">encode</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">input</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> output </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 最终的Base64编码结果</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> chr1, chr2, chr3; </span><span style="color:#6A737D;">// 三个字符的ASCII码</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> enc1, enc2, enc3, enc4; </span><span style="color:#6A737D;">// 四个6位Base64字符的索引</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 首先将输入字符串进行UTF-8编码</span></span>
<span class="line"><span style="color:#E1E4E8;">        input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Base64.</span><span style="color:#B392F0;">utf8Encode</span><span style="color:#E1E4E8;">(input);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 循环每次处理三个字符，进行编码</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> input.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 读取三个字符的ASCII码</span></span>
<span class="line"><span style="color:#E1E4E8;">            chr1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> input.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            chr2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> input.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            chr3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> input.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 将三个字符的24位二进制数据拆分为4个6位的字符索引值</span></span>
<span class="line"><span style="color:#E1E4E8;">            enc1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> chr1 </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 取chr1的前6位</span></span>
<span class="line"><span style="color:#E1E4E8;">            enc2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ((chr1 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> (chr2 </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 取chr1的后2位，加上chr2的前4位</span></span>
<span class="line"><span style="color:#E1E4E8;">            enc3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ((chr2 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> (chr3 </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 取chr2的后4位，加上chr3的前2位</span></span>
<span class="line"><span style="color:#E1E4E8;">            enc4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> chr3 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">63</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 取chr3的后6位</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 处理不足3字节的情况，chr2和chr3可能为空，处理这种情况下的填充等号</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isNaN</span><span style="color:#E1E4E8;">(chr2)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                enc3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> enc4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">64</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 等号&#39;=&#39;的索引值为64</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isNaN</span><span style="color:#E1E4E8;">(chr3)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                enc4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">64</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 等号&#39;=&#39;的索引值为64</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 根据Base64字符表生成最终的4个Base64字符</span></span>
<span class="line"><span style="color:#E1E4E8;">            output </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> Base64._keyStr.</span><span style="color:#B392F0;">charAt</span><span style="color:#E1E4E8;">(enc1) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Base64._keyStr.</span><span style="color:#B392F0;">charAt</span><span style="color:#E1E4E8;">(enc2) </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">                      Base64._keyStr.</span><span style="color:#B392F0;">charAt</span><span style="color:#E1E4E8;">(enc3) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> Base64._keyStr.</span><span style="color:#B392F0;">charAt</span><span style="color:#E1E4E8;">(enc4);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> output; </span><span style="color:#6A737D;">// 返回Base64编码字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 将Base64编码的字符串进行解码的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">decode</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">input</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> output </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 最终的解码结果</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> chr1, chr2, chr3; </span><span style="color:#6A737D;">// 三个字符的ASCII码</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> enc1, enc2, enc3, enc4; </span><span style="color:#6A737D;">// 四个Base64字符的索引值</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 移除输入字符串中所有非Base64字符</span></span>
<span class="line"><span style="color:#E1E4E8;">        input </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> input.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">[</span><span style="color:#F97583;">^</span><span style="color:#79B8FF;">A-Za-z0-9</span><span style="color:#85E89D;font-weight:bold;">\\+\\/\\=</span><span style="color:#79B8FF;">]</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 循环每次处理四个Base64字符，进行解码</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> input.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 读取四个Base64字符的索引值</span></span>
<span class="line"><span style="color:#E1E4E8;">            enc1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Base64._keyStr.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(input.</span><span style="color:#B392F0;">charAt</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">            enc2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Base64._keyStr.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(input.</span><span style="color:#B392F0;">charAt</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">            enc3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Base64._keyStr.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(input.</span><span style="color:#B392F0;">charAt</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">            enc4 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Base64._keyStr.</span><span style="color:#B392F0;">indexOf</span><span style="color:#E1E4E8;">(input.</span><span style="color:#B392F0;">charAt</span><span style="color:#E1E4E8;">(i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 将4个6位索引值合并为3个8位的字符编码</span></span>
<span class="line"><span style="color:#E1E4E8;">            chr1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (enc1 </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> (enc2 </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            chr2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ((enc2 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> (enc3 </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">            chr3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ((enc3 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> enc4;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;">// 将解码后的字符添加到输出字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">            output </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">(chr1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (enc3 </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">64</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                output </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">(chr2);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (enc4 </span><span style="color:#F97583;">!==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">64</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                output </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">(chr3);</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 最后将UTF-8编码的数据还原为原始字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">        output </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Base64.</span><span style="color:#B392F0;">utf8Decode</span><span style="color:#E1E4E8;">(output);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> output; </span><span style="color:#6A737D;">// 返回原始字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 将字符串转换为UTF-8编码的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">utf8Encode</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">string</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 将所有CRLF转换为LF</span></span>
<span class="line"><span style="color:#E1E4E8;">        string </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> string.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#79B8FF;">\\r\\n</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> utfText </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 最终的UTF-8编码结果</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 循环每个字符，进行UTF-8编码</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> n </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; n </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> string.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; n</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> string.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(n);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (c </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">128</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                utfText </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">(c); </span><span style="color:#6A737D;">// ASCII字符编码不变</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ((c </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">127</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> (c </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2048</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 双字节字符 (0x0080-0x07FF)</span></span>
<span class="line"><span style="color:#E1E4E8;">                utfText </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">((c </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">192</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 取前6位，加上110xxxxx标志</span></span>
<span class="line"><span style="color:#E1E4E8;">                utfText </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">((c </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">63</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">128</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 取后6位，加上10xxxxxx标志</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 三字节字符 (0x0800-0xFFFF)</span></span>
<span class="line"><span style="color:#E1E4E8;">                utfText </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">((c </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">224</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 取前4位，加上1110xxxx标志</span></span>
<span class="line"><span style="color:#E1E4E8;">                utfText </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">(((c </span><span style="color:#F97583;">&gt;&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">63</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">128</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 取中间6位，加上10xxxxxx标志</span></span>
<span class="line"><span style="color:#E1E4E8;">                utfText </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">((c </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">63</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">128</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// 取后6位，加上10xxxxxx标志</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> utfText; </span><span style="color:#6A737D;">// 返回UTF-8编码字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 将UTF-8编码的字符串解码为原始字符串的方法</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#B392F0;">utf8Decode</span><span style="color:#E1E4E8;">: </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">utfText</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> string </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// 最终解码结果</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> c, c1, c2, c3;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;">// 循环每个字符，进行解码</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> (i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> utfText.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            c </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utfText.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(i);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (c </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">128</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 单字节字符 (0x00-0x7F)</span></span>
<span class="line"><span style="color:#E1E4E8;">                string </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">(c); </span><span style="color:#6A737D;">// ASCII字符，不变</span></span>
<span class="line"><span style="color:#E1E4E8;">                i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ((c </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">191</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> (c </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">224</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 双字节字符 (0xC0-0xDF)</span></span>
<span class="line"><span style="color:#E1E4E8;">                c2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utfText.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                string </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">(((c </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">31</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> (c2 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">63</span><span style="color:#E1E4E8;">)); </span><span style="color:#6A737D;">// 还原原字符</span></span>
<span class="line"><span style="color:#E1E4E8;">                i </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;">// 三字节字符 (0xE0-0xFF)</span></span>
<span class="line"><span style="color:#E1E4E8;">                c2 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utfText.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                c3 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> utfText.</span><span style="color:#B392F0;">charCodeAt</span><span style="color:#E1E4E8;">(i </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">                string </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> String.</span><span style="color:#B392F0;">fromCharCode</span><span style="color:#E1E4E8;">(((c </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> ((c2 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">63</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> (c3 </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">63</span><span style="color:#E1E4E8;">)); </span><span style="color:#6A737D;">// 还原原字符</span></span>
<span class="line"><span style="color:#E1E4E8;">                i </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> string; </span><span style="color:#6A737D;">// 返回原始字符串</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 示例字符串，包含中文和数字</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">stringChinese</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://studypy.blog.csdn.net - 小鱼神1024&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 对字符串进行Base64编码</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> resultEncoded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Base64.</span><span style="color:#B392F0;">encode</span><span style="color:#E1E4E8;">(stringChinese);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 对Base64编码的字符串进行解码</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> resultDecoded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Base64.</span><span style="color:#B392F0;">decode</span><span style="color:#E1E4E8;">(resultEncoded);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64编码值</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 编码值:&quot;</span><span style="color:#E1E4E8;">, resultEncoded);  </span><span style="color:#6A737D;">// 输出: aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQgLSDlsI/psbznpZ4xMDI0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64解码值</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Base64 解码值:&quot;</span><span style="color:#E1E4E8;">, resultDecoded);  </span><span style="color:#6A737D;">// 输出: https://studypy.blog.csdn.net - 小鱼神1024</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 定义一个Base64对象，包含编码、解码以及UTF-8编码和解码的方法</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> Base64 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Base64字符表，用于编码和解码过程中各索引值的对应字符</span></span>
<span class="line"><span style="color:#24292E;">    _keyStr: </span><span style="color:#032F62;">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 将输入字符串进行Base64编码的方法</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">encode</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">input</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> output </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 最终的Base64编码结果</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> chr1, chr2, chr3; </span><span style="color:#6A737D;">// 三个字符的ASCII码</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> enc1, enc2, enc3, enc4; </span><span style="color:#6A737D;">// 四个6位Base64字符的索引</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 首先将输入字符串进行UTF-8编码</span></span>
<span class="line"><span style="color:#24292E;">        input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Base64.</span><span style="color:#6F42C1;">utf8Encode</span><span style="color:#24292E;">(input);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 循环每次处理三个字符，进行编码</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> input.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 读取三个字符的ASCII码</span></span>
<span class="line"><span style="color:#24292E;">            chr1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> input.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            chr2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> input.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            chr3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> input.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 将三个字符的24位二进制数据拆分为4个6位的字符索引值</span></span>
<span class="line"><span style="color:#24292E;">            enc1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chr1 </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 取chr1的前6位</span></span>
<span class="line"><span style="color:#24292E;">            enc2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ((chr1 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> (chr2 </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 取chr1的后2位，加上chr2的前4位</span></span>
<span class="line"><span style="color:#24292E;">            enc3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ((chr2 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> (chr3 </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 取chr2的后4位，加上chr3的前2位</span></span>
<span class="line"><span style="color:#24292E;">            enc4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> chr3 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">63</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 取chr3的后6位</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 处理不足3字节的情况，chr2和chr3可能为空，处理这种情况下的填充等号</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isNaN</span><span style="color:#24292E;">(chr2)) {</span></span>
<span class="line"><span style="color:#24292E;">                enc3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> enc4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">64</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 等号&#39;=&#39;的索引值为64</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isNaN</span><span style="color:#24292E;">(chr3)) {</span></span>
<span class="line"><span style="color:#24292E;">                enc4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">64</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 等号&#39;=&#39;的索引值为64</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 根据Base64字符表生成最终的4个Base64字符</span></span>
<span class="line"><span style="color:#24292E;">            output </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> Base64._keyStr.</span><span style="color:#6F42C1;">charAt</span><span style="color:#24292E;">(enc1) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Base64._keyStr.</span><span style="color:#6F42C1;">charAt</span><span style="color:#24292E;">(enc2) </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">                      Base64._keyStr.</span><span style="color:#6F42C1;">charAt</span><span style="color:#24292E;">(enc3) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> Base64._keyStr.</span><span style="color:#6F42C1;">charAt</span><span style="color:#24292E;">(enc4);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> output; </span><span style="color:#6A737D;">// 返回Base64编码字符串</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 将Base64编码的字符串进行解码的方法</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">decode</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">input</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> output </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 最终的解码结果</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> chr1, chr2, chr3; </span><span style="color:#6A737D;">// 三个字符的ASCII码</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> enc1, enc2, enc3, enc4; </span><span style="color:#6A737D;">// 四个Base64字符的索引值</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 移除输入字符串中所有非Base64字符</span></span>
<span class="line"><span style="color:#24292E;">        input </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> input.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">[</span><span style="color:#D73A49;">^</span><span style="color:#005CC5;">A-Za-z0-9</span><span style="color:#22863A;font-weight:bold;">\\+\\/\\=</span><span style="color:#005CC5;">]</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 循环每次处理四个Base64字符，进行解码</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> input.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 读取四个Base64字符的索引值</span></span>
<span class="line"><span style="color:#24292E;">            enc1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Base64._keyStr.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(input.</span><span style="color:#6F42C1;">charAt</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">            enc2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Base64._keyStr.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(input.</span><span style="color:#6F42C1;">charAt</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">            enc3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Base64._keyStr.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(input.</span><span style="color:#6F42C1;">charAt</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">            enc4 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Base64._keyStr.</span><span style="color:#6F42C1;">indexOf</span><span style="color:#24292E;">(input.</span><span style="color:#6F42C1;">charAt</span><span style="color:#24292E;">(i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 将4个6位索引值合并为3个8位的字符编码</span></span>
<span class="line"><span style="color:#24292E;">            chr1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (enc1 </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> (enc2 </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            chr2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ((enc2 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> (enc3 </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">            chr3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ((enc3 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> enc4;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;">// 将解码后的字符添加到输出字符串</span></span>
<span class="line"><span style="color:#24292E;">            output </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">(chr1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (enc3 </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">64</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                output </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">(chr2);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (enc4 </span><span style="color:#D73A49;">!==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">64</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                output </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">(chr3);</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 最后将UTF-8编码的数据还原为原始字符串</span></span>
<span class="line"><span style="color:#24292E;">        output </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Base64.</span><span style="color:#6F42C1;">utf8Decode</span><span style="color:#24292E;">(output);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> output; </span><span style="color:#6A737D;">// 返回原始字符串</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 将字符串转换为UTF-8编码的方法</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">utf8Encode</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">string</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 将所有CRLF转换为LF</span></span>
<span class="line"><span style="color:#24292E;">        string </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> string.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#005CC5;">\\r\\n</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> utfText </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 最终的UTF-8编码结果</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 循环每个字符，进行UTF-8编码</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> n </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; n </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> string.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; n</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> string.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(n);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (c </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">128</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                utfText </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">(c); </span><span style="color:#6A737D;">// ASCII字符编码不变</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ((c </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">127</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> (c </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2048</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 双字节字符 (0x0080-0x07FF)</span></span>
<span class="line"><span style="color:#24292E;">                utfText </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">((c </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">192</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 取前6位，加上110xxxxx标志</span></span>
<span class="line"><span style="color:#24292E;">                utfText </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">((c </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">63</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">128</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 取后6位，加上10xxxxxx标志</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 三字节字符 (0x0800-0xFFFF)</span></span>
<span class="line"><span style="color:#24292E;">                utfText </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">((c </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">224</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 取前4位，加上1110xxxx标志</span></span>
<span class="line"><span style="color:#24292E;">                utfText </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">(((c </span><span style="color:#D73A49;">&gt;&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">63</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">128</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 取中间6位，加上10xxxxxx标志</span></span>
<span class="line"><span style="color:#24292E;">                utfText </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">((c </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">63</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">128</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// 取后6位，加上10xxxxxx标志</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> utfText; </span><span style="color:#6A737D;">// 返回UTF-8编码字符串</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 将UTF-8编码的字符串解码为原始字符串的方法</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6F42C1;">utf8Decode</span><span style="color:#24292E;">: </span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">utfText</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> string </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// 最终解码结果</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> c, c1, c2, c3;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;">// 循环每个字符，进行解码</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> (i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> utfText.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">            c </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utfText.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(i);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (c </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">128</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 单字节字符 (0x00-0x7F)</span></span>
<span class="line"><span style="color:#24292E;">                string </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">(c); </span><span style="color:#6A737D;">// ASCII字符，不变</span></span>
<span class="line"><span style="color:#24292E;">                i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ((c </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">191</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> (c </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">224</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 双字节字符 (0xC0-0xDF)</span></span>
<span class="line"><span style="color:#24292E;">                c2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utfText.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                string </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">(((c </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">31</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> (c2 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">63</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 还原原字符</span></span>
<span class="line"><span style="color:#24292E;">                i </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;">// 三字节字符 (0xE0-0xFF)</span></span>
<span class="line"><span style="color:#24292E;">                c2 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utfText.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                c3 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> utfText.</span><span style="color:#6F42C1;">charCodeAt</span><span style="color:#24292E;">(i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">                string </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> String.</span><span style="color:#6F42C1;">fromCharCode</span><span style="color:#24292E;">(((c </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">12</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> ((c2 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">63</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> (c3 </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">63</span><span style="color:#24292E;">)); </span><span style="color:#6A737D;">// 还原原字符</span></span>
<span class="line"><span style="color:#24292E;">                i </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> string; </span><span style="color:#6A737D;">// 返回原始字符串</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 示例字符串，包含中文和数字</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">stringChinese</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://studypy.blog.csdn.net - 小鱼神1024&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 对字符串进行Base64编码</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> resultEncoded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Base64.</span><span style="color:#6F42C1;">encode</span><span style="color:#24292E;">(stringChinese);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 对Base64编码的字符串进行解码</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> resultDecoded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Base64.</span><span style="color:#6F42C1;">decode</span><span style="color:#24292E;">(resultEncoded);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64编码值</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 编码值:&quot;</span><span style="color:#24292E;">, resultEncoded);  </span><span style="color:#6A737D;">// 输出: aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQgLSDlsI/psbznpZ4xMDI0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 输出Base64解码值</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Base64 解码值:&quot;</span><span style="color:#24292E;">, resultDecoded);  </span><span style="color:#6A737D;">// 输出: https://studypy.blog.csdn.net - 小鱼神1024</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br></div></div><h3 id="魔改base64" tabindex="-1">魔改Base64 <a class="header-anchor" href="#魔改base64" aria-label="Permalink to &quot;魔改Base64&quot;">​</a></h3><p>所谓的 <code>魔改Base64</code> ，一般是指基于标准的Base64编码形式进行自定义修改。这些自定义修改可以包括改变编码字符集、调整填充字符、实现自定义的序列化手段等等。以下是几种常见的 <code>魔改Base64</code> 实现方式及其示例：</p><h4 id="修改字符集" tabindex="-1">修改字符集 <a class="header-anchor" href="#修改字符集" aria-label="Permalink to &quot;修改字符集&quot;">​</a></h4><p>在标准Base64中，使用的字符集是 A-Z, a-z, 0-9, +, /。魔改的Base64可能会替换这些字符。例如，将 + 和 / 分别替换成 - 和 _。这种修改在URL中非常常见，因为这避免了使用特殊字符。</p><p>示例如下：</p><ul><li><p>标准Base64: MDEyMzQ1Njc4OTA+ (明文: 01234567890)</p></li><li><p>魔改Base64: MDEyMzQ1Njc4OTA- (将 + 替换成 -)</p></li></ul><h4 id="调整填充字符" tabindex="-1">调整填充字符 <a class="header-anchor" href="#调整填充字符" aria-label="Permalink to &quot;调整填充字符&quot;">​</a></h4><p>标准Base64以 = 作为填充字符，以确保编码后的字符串长度是4的倍数。魔改Base64可能会使用不同的填充字符，或者完全去掉填充。</p><p>示例如下：</p><ul><li><p>标准Base64: SGVsbG8= (明文: Hello)</p></li><li><p>无填充魔改: SGVsbG8 (移除了 =)</p></li></ul><h4 id="自定义编码-解码规则" tabindex="-1">自定义编码/解码规则 <a class="header-anchor" href="#自定义编码-解码规则" aria-label="Permalink to &quot;自定义编码/解码规则&quot;">​</a></h4><p>一些系统可能会定义专属的编码和解码规则，比如重新排列字符集，或者按照特定的位移规则进行编码。</p><p>示例如下：</p><ul><li>自定义字符集: 假设使用 0-9 和 a-Z 排列 <ul><li>标准字符集：ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</li><li>自定义字符集：0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz+/</li></ul></li><li>假设明文 “01” 编码成 Base64 在标准字符集中为 MDE= <ul><li>在自定义字符集中：可能会变为 6xq=</li></ul></li></ul><h4 id="魔改举例" tabindex="-1">魔改举例 <a class="header-anchor" href="#魔改举例" aria-label="Permalink to &quot;魔改举例&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">customBase64Encode</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 标准Base64 编码</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> encoded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">btoa</span><span style="color:#E1E4E8;">(data);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 魔改部分</span></span>
<span class="line"><span style="color:#E1E4E8;">    encoded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> encoded.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\+</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;-&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#85E89D;font-weight:bold;">\\/</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;_&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">=</span><span style="color:#F97583;">+$</span><span style="color:#9ECBFF;">/</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> encoded;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">customBase64Decode</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">data</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 魔改部分转回标准Base64</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> base64_data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> data.</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">-</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;+&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">replace</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">/</span><span style="color:#DBEDFF;">_</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">g</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;/&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 计算填充</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (base64_data.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">%</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            base64_data </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;==&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            base64_data </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;=&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 解码</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> decoded </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">atob</span><span style="color:#E1E4E8;">(base64_data);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> decoded;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 示例</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> plainText </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;https://studypy.blog.csdn.net&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> encodedText </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">customBase64Encode</span><span style="color:#E1E4E8;">(plainText);</span></span>
<span class="line"><span style="color:#F97583;">let</span><span style="color:#E1E4E8;"> decodedText </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">customBase64Decode</span><span style="color:#E1E4E8;">(encodedText);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`明文: \${</span><span style="color:#E1E4E8;">plainText</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`魔改Base64编码: \${</span><span style="color:#E1E4E8;">encodedText</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQ</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`标准Base64编码: \${</span><span style="color:#B392F0;">btoa</span><span style="color:#9ECBFF;">(</span><span style="color:#E1E4E8;">plainText</span><span style="color:#9ECBFF;">)</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">); </span><span style="color:#6A737D;">// aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQ=</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">\`解码后的明文: \${</span><span style="color:#E1E4E8;">decodedText</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">customBase64Encode</span><span style="color:#24292E;">(</span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 标准Base64 编码</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> encoded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">btoa</span><span style="color:#24292E;">(data);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 魔改部分</span></span>
<span class="line"><span style="color:#24292E;">    encoded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> encoded.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#22863A;font-weight:bold;">\\+</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;-&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/</span><span style="color:#22863A;font-weight:bold;">\\/</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;_&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/=</span><span style="color:#D73A49;">+$</span><span style="color:#032F62;">/</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> encoded;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">customBase64Decode</span><span style="color:#24292E;">(</span><span style="color:#E36209;">data</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 魔改部分转回标准Base64</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> base64_data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> data.</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/-/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;+&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">replace</span><span style="color:#24292E;">(</span><span style="color:#032F62;">/_/</span><span style="color:#D73A49;">g</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;/&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 计算填充</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (base64_data.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">%</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">4</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            base64_data </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;==&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            base64_data </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;=&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 解码</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">let</span><span style="color:#24292E;"> decoded </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">atob</span><span style="color:#24292E;">(base64_data);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> decoded;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 示例</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> plainText </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;https://studypy.blog.csdn.net&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> encodedText </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">customBase64Encode</span><span style="color:#24292E;">(plainText);</span></span>
<span class="line"><span style="color:#D73A49;">let</span><span style="color:#24292E;"> decodedText </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">customBase64Decode</span><span style="color:#24292E;">(encodedText);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`明文: \${</span><span style="color:#24292E;">plainText</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`魔改Base64编码: \${</span><span style="color:#24292E;">encodedText</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQ</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`标准Base64编码: \${</span><span style="color:#6F42C1;">btoa</span><span style="color:#032F62;">(</span><span style="color:#24292E;">plainText</span><span style="color:#032F62;">)</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">); </span><span style="color:#6A737D;">// aHR0cHM6Ly9zdHVkeXB5LmJsb2cuY3Nkbi5uZXQ=</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">\`解码后的明文: \${</span><span style="color:#24292E;">decodedText</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><p>Base64 是我们最常见的编码，除此之外，其实还有 <code>Base16</code>、<code>Base32</code>、<code>Base58</code>、<code>Base85</code>、<code>Base100</code> 等。</p><p><em><strong>创作不易，动动您发财的小手，点赞关注一波，支持我创作更多对您有帮助的文章！</strong></em></p>`,40);function b(u,A,d,D,C,B){const l=o,n=r("ClientOnly"),p=e;return t(),y("div",null,[F,s(n,null,{default:a(()=>[s(l)]),_:1}),s(n,null,{default:a(()=>[s(p)]),_:1})])}const f=c(i,[["render",b]]);export{g as __pageData,f as default};
