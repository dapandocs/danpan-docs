import{_ as c,a as r}from"./chunks/CopyRight.vue_vue_type_script_setup_true_lang.67549825.js";import{_ as i,C as E,o as u,c as d,H as n,w as o,k as s,a as e,Q as y}from"./chunks/framework.27021b64.js";import{_}from"./chunks/index.e5e15ed4.js";import"./chunks/CloseOutlined.9c3246b4.js";import"./chunks/isObjectLike.46b91259.js";import"./chunks/Serializer.fad5b415.js";import"./chunks/LeftOutlined.9040821c.js";import"./chunks/EyeOutlined.53cc40ff.js";const Y=JSON.parse('{"title":"VSCode Debugger 用法","description":"","frontmatter":{},"headers":[],"relativePath":"note/vscode-debugger.md","filePath":"note/vscode-debugger.md","lastUpdated":1691480721000}'),g={name:"note/vscode-debugger.md"},b=s("h1",{id:"vscode-debugger-用法",tabindex:"-1"},[e("VSCode Debugger 用法 "),s("a",{class:"header-anchor",href:"#vscode-debugger-用法","aria-label":'Permalink to "VSCode Debugger 用法"'},"​")],-1),h=s("h2",{id:"启动调试",tabindex:"-1"},[e("启动调试 "),s("a",{class:"header-anchor",href:"#启动调试","aria-label":'Permalink to "启动调试"'},"​")],-1),m=y(`<h2 id="案例代码" tabindex="-1">案例代码 <a class="header-anchor" href="#案例代码" aria-label="Permalink to &quot;案例代码&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">mergeString</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">a</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">b</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;a&quot;</span><span style="color:#E1E4E8;">, a);</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;b&quot;</span><span style="color:#E1E4E8;">, b);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`\${</span><span style="color:#E1E4E8;">a</span><span style="color:#9ECBFF;">} \${</span><span style="color:#E1E4E8;">b</span><span style="color:#9ECBFF;">}\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">mergeString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hello&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;World&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">mergeString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;你好&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;世界&quot;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">mergeString</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;大&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;前端&quot;</span><span style="color:#E1E4E8;">));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">mergeString</span><span style="color:#24292E;">(</span><span style="color:#E36209;">a</span><span style="color:#24292E;">, </span><span style="color:#E36209;">b</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;a&quot;</span><span style="color:#24292E;">, a);</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;b&quot;</span><span style="color:#24292E;">, b);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`\${</span><span style="color:#24292E;">a</span><span style="color:#032F62;">} \${</span><span style="color:#24292E;">b</span><span style="color:#032F62;">}\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">mergeString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hello&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;World&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">mergeString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;你好&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;世界&quot;</span><span style="color:#24292E;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">mergeString</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;大&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;前端&quot;</span><span style="color:#24292E;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="功能解释" tabindex="-1">功能解释 <a class="header-anchor" href="#功能解释" aria-label="Permalink to &quot;功能解释&quot;">​</a></h2><p>代码前面的红点表示断点，点击红点可以取消断点。</p><div class="info custom-block"><p class="custom-block-title">注意</p><p>每次开始前，要先点一下continue（继续）键，否则会一直停在第一个断点处。</p></div><h3 id="continue-继续" tabindex="-1">continue（继续） <a class="header-anchor" href="#continue-继续" aria-label="Permalink to &quot;continue（继续）&quot;">​</a></h3><p>启动调试后，点击 continue，代码会一直执行到下一个断点处。如果没有断点，代码会一直执行到结束。 如果当前行是函数，且函数里面有断点，会执行到函数里面的断点处。</p>`,7),F=s("p",null,"这个执行顺序是：第7行 -> 第3行 -> 第9行 -> 第3行 -> 第11行 -> 第3行 -> 结束",-1),q=s("p",null,"这个执行顺序是：第7行 -> 第9行 -> 第11行 -> 结束",-1),v=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"注意"),s("p",null,"continue（继续）键会忽略灰色的断点（代码里的圆型灰点），只会执行红色的断点。")],-1),f=s("h3",{id:"step-over-单步跳过",tabindex:"-1"},[e("step over（单步跳过） "),s("a",{class:"header-anchor",href:"#step-over-单步跳过","aria-label":'Permalink to "step over（单步跳过）"'},"​")],-1),C=s("p",null,"启动调试后，点击 step over，代码会执行到下一行。如果下一行是函数，会直接跳过函数，执行下一行。 如果当前行是函数，且函数里面有断点，会执行到函数里面的断点处。",-1),k=s("p",null,"这个执行顺序是：第7行 -> 第3行 -> 第4行 -> 第7行 -> 第9行 -> 第3行 -> 第4行 -> 第9行 -> 第11行 -> 第3行 -> 第4行 -> 第11行 -> 结束",-1),B=s("p",null,"这个执行顺序是：第7行 -> 第9行 -> 第11行 -> 结束",-1),S=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"注意"),s("p",null,"step over（单步跳过）键会忽略灰色的断点（代码里的圆型灰点），只会执行红色的断点。")],-1),x=s("h3",{id:"step-in-单步调试",tabindex:"-1"},[e("step in（单步调试） "),s("a",{class:"header-anchor",href:"#step-in-单步调试","aria-label":'Permalink to "step in（单步调试）"'},"​")],-1),P=s("p",null,"如果当前执行到第7行，点击 step in（单步调试），会进入 mergeString 函数内部，step over（单步跳过）执行函数内部的代码。",-1),$=s("div",{class:"warning custom-block"},[s("p",{class:"custom-block-title"},"注意"),s("p",null,"step in（单步调试）键会执行灰色的断点（代码里的圆型灰点）。")],-1),V=s("h3",{id:"step-out-单步跳出",tabindex:"-1"},[e("step out（单步跳出） "),s("a",{class:"header-anchor",href:"#step-out-单步跳出","aria-label":'Permalink to "step out（单步跳出）"'},"​")],-1),D=s("p",null,"作用是跳出当前函数。如果当前行不在函数内，continue（继续）执行到下一个断点。",-1),A=s("h3",{id:"restart-重启",tabindex:"-1"},[e("restart（重启） "),s("a",{class:"header-anchor",href:"#restart-重启","aria-label":'Permalink to "restart（重启）"'},"​")],-1),T=s("p",null,"作用是重启调试。",-1),w=s("h3",{id:"stop-停止",tabindex:"-1"},[e("stop（停止） "),s("a",{class:"header-anchor",href:"#stop-停止","aria-label":'Permalink to "stop（停止）"'},"​")],-1),N=s("p",null,"作用是停止调试。",-1);function H(O,j,I,R,W,G){const l=_,a=E("ClientOnly"),p=c,t=r;return u(),d("div",null,[b,h,n(a,null,{default:o(()=>[n(l,{src:"/images/react/7.png",alt:"vscode-debugger"})]),_:1}),m,n(a,null,{default:o(()=>[n(l,{src:"/images/react/8.png",alt:"vscode-debugger-1"})]),_:1}),F,n(a,null,{default:o(()=>[n(l,{src:"/images/react/9.png",alt:"vscode-debugger-2"})]),_:1}),q,v,f,C,n(a,null,{default:o(()=>[n(l,{src:"/images/react/8.png",alt:"vscode-debugger-1"})]),_:1}),k,n(a,null,{default:o(()=>[n(l,{src:"/images/react/9.png",alt:"vscode-debugger-1"})]),_:1}),B,S,x,n(a,null,{default:o(()=>[n(l,{src:"/images/react/9.png",alt:"vscode-debugger-1"})]),_:1}),P,$,V,n(a,null,{default:o(()=>[n(l,{src:"/images/react/9.png",alt:"vscode-debugger-1"})]),_:1}),D,A,T,w,N,n(a,null,{default:o(()=>[n(p)]),_:1}),n(a,null,{default:o(()=>[n(t)]),_:1})])}const Z=i(g,[["render",H]]);export{Y as __pageData,Z as default};
