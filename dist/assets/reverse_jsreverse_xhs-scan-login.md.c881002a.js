import{_ as r,a as E}from"./chunks/CopyRight.vue_vue_type_script_setup_true_lang.67549825.js";import{_ as y,C as i,o as u,c as F,H as s,w as p,Q as e,k as n,a}from"./chunks/framework.27021b64.js";import{_ as d}from"./chunks/index.e5e15ed4.js";import"./chunks/CloseOutlined.9c3246b4.js";import"./chunks/isObjectLike.46b91259.js";import"./chunks/Serializer.fad5b415.js";import"./chunks/LeftOutlined.9040821c.js";import"./chunks/EyeOutlined.53cc40ff.js";const G=JSON.parse('{"title":"某红薯扫码登录分析与协议","description":"","frontmatter":{},"headers":[],"relativePath":"reverse/jsreverse/xhs-scan-login.md","filePath":"reverse/jsreverse/xhs-scan-login.md","lastUpdated":1719219394000}'),_={name:"reverse/jsreverse/xhs-scan-login.md"},q=e('<h1 id="某红薯扫码登录分析与协议" tabindex="-1">某红薯扫码登录分析与协议 <a class="header-anchor" href="#某红薯扫码登录分析与协议" aria-label="Permalink to &quot;某红薯扫码登录分析与协议&quot;">​</a></h1><blockquote><p>【作者主页】：<a href="https://blog.csdn.net/studypy1024" target="_blank" rel="noreferrer">小鱼神1024</a></p><p>【擅长领域】：JS逆向、小程序逆向、AST还原、验证码突防、Python开发、浏览器插件开发、React前端开发、NestJS后端开发等等</p></blockquote><blockquote><p>本文章中所有内容仅供学习交流使用，不用于其他任何目的，不提供完整代码，抓包内容、敏感网址、数据接口等均已做脱敏处理，严禁用于商业用途和非法用途，否则由此产生的一切后果均与作者无关！若有侵权，请联系作者立即删除！</p></blockquote><h3 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h3><p>星球里的伙伴有问到了关于某红薯扫码登录的问题。刚好我也一直想写一篇关于扫码登录的文章，择日不如撞日，今天就写一篇吧！</p><h3 id="前置分析" tabindex="-1">前置分析 <a class="header-anchor" href="#前置分析" aria-label="Permalink to &quot;前置分析&quot;">​</a></h3><p>进入登录界面后，会出现登录的二维码。那这个二维码是什么呢？</p><p>当然了，第一次的时候我也不知道，不过没关系。学习嘛，都有一个探索的过程。</p><p>首先，我们将二维码截图保存，并有在线解析二维码，如下：</p>',9),b=n("p",null,"可以发现，二维码其实就是一个url链接。接下来的问题就是，它从哪里来？",-1),m=n("p",null,[a("分析后得到，它是从 "),n("code",null,"/api/sns/web/v1/login/qrcode/create"),a(" 接口中返回的。")],-1),h=n("p",null,"二维码生成后，它是如何检测用户是否已经扫码了呢？",-1),A=n("p",null,[a("打开控制台之后，发现每隔1s，就会发送一个请求到 "),n("code",null,"/api/sns/web/v1/login/qrcode/status"),a(" 接口中。")],-1),g=e(`<p>其中的 <code>code_status</code>，从字面意思就能看出来，它是二维码的状态。</p><p>经过扫码测试得出一下结果：</p><ul><li>二维码状态码为 <code>0</code> 时，表示二维码未扫码。</li><li>二维码状态码为 <code>1</code> 时，表示二维码已扫描，但未授权。</li><li>二维码状态码为 <code>2</code> 时，表示二维码已扫描，且已授权。</li><li>二维码状态码为 <code>3</code> 时，表示二维码已过期。</li></ul><p>其实也挺简单的。</p><h3 id="如何实现" tabindex="-1">如何实现 <a class="header-anchor" href="#如何实现" aria-label="Permalink to &quot;如何实现&quot;">​</a></h3><p>既然知道了原理，那我们就可以开始实现了。</p><p>首先，我们使用 <code>FastAPI</code> 框架搭建一个 <code>API</code> 服务，并使用 <code>uvicorn</code> 启动。</p><p>在写接口之前，我们要先了解 <code>x-s</code>、<code>x-t</code>、<code>x-s-common</code> 参数是如何生成的。不懂的伙伴，我前面的文章有详细介绍过，自行查阅。</p><h4 id="后端服务" tabindex="-1">后端服务 <a class="header-anchor" href="#后端服务" aria-label="Permalink to &quot;后端服务&quot;">​</a></h4><p>第一个接口，就是生成二维码的接口。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@app.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/qr_generate&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">tags</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&quot;生成登录二维码&quot;</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">generate_qr</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;qr_type&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> session.post(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">url</span><span style="color:#F97583;">=</span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">qr_create_api</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">data</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">json.dumps(data, </span><span style="color:#FFAB70;">separators</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;:&quot;</span><span style="color:#E1E4E8;">), </span><span style="color:#FFAB70;">ensure_ascii</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">False</span><span style="color:#E1E4E8;">).encode(</span><span style="color:#9ECBFF;">&#39;utf-8&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">headers</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">headers,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> response.status_code </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        qr_data </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> response.json()</span></span>
<span class="line"><span style="color:#E1E4E8;">        logger.success(</span><span style="color:#9ECBFF;">&quot;二维码已生成&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> JSONResponse(</span><span style="color:#FFAB70;">content</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">qr_data)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">raise</span><span style="color:#E1E4E8;"> HTTPException(</span><span style="color:#FFAB70;">status_code</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">detail</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;创建二维码失败&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/qr_generate&#39;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">tags</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&quot;生成登录二维码&quot;</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">generate_qr</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;qr_type&#39;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> session.post(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">url</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">qr_create_api</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">data</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">json.dumps(data, </span><span style="color:#E36209;">separators</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;:&quot;</span><span style="color:#24292E;">), </span><span style="color:#E36209;">ensure_ascii</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">).encode(</span><span style="color:#032F62;">&#39;utf-8&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">headers</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">headers,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> response.status_code </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        qr_data </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> response.json()</span></span>
<span class="line"><span style="color:#24292E;">        logger.success(</span><span style="color:#032F62;">&quot;二维码已生成&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> JSONResponse(</span><span style="color:#E36209;">content</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">qr_data)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> HTTPException(</span><span style="color:#E36209;">status_code</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#E36209;">detail</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;创建二维码失败&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>第二个接口，检测二维码状态的接口。</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">@app.get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;/qr_status&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">async</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">qr_status</span><span style="color:#E1E4E8;">(request: Request):</span></span>
<span class="line"><span style="color:#E1E4E8;">    params </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> request.query_params</span></span>
<span class="line"><span style="color:#E1E4E8;">    qr_id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> params.get(</span><span style="color:#9ECBFF;">&quot;qr_id&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    code </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> params.get(</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> qr_id </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> code:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">raise</span><span style="color:#E1E4E8;"> HTTPException(</span><span style="color:#FFAB70;">status_code</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">400</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">detail</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;缺少qr_id或code参数&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    params_encode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> urllib.parse.urlencode({</span><span style="color:#9ECBFF;">&quot;qr_id&quot;</span><span style="color:#E1E4E8;">: qr_id, </span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">: code })</span></span>
<span class="line"><span style="color:#E1E4E8;">    response </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> session.get(</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">url</span><span style="color:#F97583;">=</span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">qr_status_api</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">?</span><span style="color:#79B8FF;">{</span><span style="color:#E1E4E8;">params_encode</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#FFAB70;">headers</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">headers,</span></span>
<span class="line"><span style="color:#E1E4E8;">    )</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> response.status_code </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        qr_status_json </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> response.json()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> qr_status_json[</span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> qr_status_json[</span><span style="color:#9ECBFF;">&quot;data&quot;</span><span style="color:#E1E4E8;">][</span><span style="color:#9ECBFF;">&quot;code_status&quot;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 登录成功获取ck</span></span>
<span class="line"><span style="color:#E1E4E8;">            all_cookies </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;">initial_cookies, </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;">{c.name: c.value </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> c </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> response.cookies}}</span></span>
<span class="line"><span style="color:#E1E4E8;">            logger.success(all_cookies)</span></span>
<span class="line"><span style="color:#E1E4E8;">            content </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;msg&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&quot;登录成功&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;cookies&quot;</span><span style="color:#E1E4E8;">: all_cookies,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;code&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#9ECBFF;">&quot;data&quot;</span><span style="color:#E1E4E8;">: qr_status_json[</span><span style="color:#9ECBFF;">&quot;data&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">            }</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> JSONResponse(</span><span style="color:#FFAB70;">content</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">content)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> JSONResponse(</span><span style="color:#FFAB70;">content</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">qr_status_json)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">raise</span><span style="color:#E1E4E8;"> HTTPException(</span><span style="color:#FFAB70;">status_code</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">500</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">detail</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;获取二维码状态失败&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">@app.get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;/qr_status&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">async</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">qr_status</span><span style="color:#24292E;">(request: Request):</span></span>
<span class="line"><span style="color:#24292E;">    params </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> request.query_params</span></span>
<span class="line"><span style="color:#24292E;">    qr_id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> params.get(</span><span style="color:#032F62;">&quot;qr_id&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    code </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> params.get(</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> qr_id </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> code:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> HTTPException(</span><span style="color:#E36209;">status_code</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">400</span><span style="color:#24292E;">, </span><span style="color:#E36209;">detail</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;缺少qr_id或code参数&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    params_encode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> urllib.parse.urlencode({</span><span style="color:#032F62;">&quot;qr_id&quot;</span><span style="color:#24292E;">: qr_id, </span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">: code })</span></span>
<span class="line"><span style="color:#24292E;">    response </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> session.get(</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">url</span><span style="color:#D73A49;">=</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">qr_status_api</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">?</span><span style="color:#005CC5;">{</span><span style="color:#24292E;">params_encode</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#E36209;">headers</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">headers,</span></span>
<span class="line"><span style="color:#24292E;">    )</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> response.status_code </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        qr_status_json </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> response.json()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> qr_status_json[</span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> qr_status_json[</span><span style="color:#032F62;">&quot;data&quot;</span><span style="color:#24292E;">][</span><span style="color:#032F62;">&quot;code_status&quot;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 登录成功获取ck</span></span>
<span class="line"><span style="color:#24292E;">            all_cookies </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span><span style="color:#D73A49;">**</span><span style="color:#24292E;">initial_cookies, </span><span style="color:#D73A49;">**</span><span style="color:#24292E;">{c.name: c.value </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> response.cookies}}</span></span>
<span class="line"><span style="color:#24292E;">            logger.success(all_cookies)</span></span>
<span class="line"><span style="color:#24292E;">            content </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;msg&quot;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&quot;登录成功&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;cookies&quot;</span><span style="color:#24292E;">: all_cookies,</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;code&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#032F62;">&quot;data&quot;</span><span style="color:#24292E;">: qr_status_json[</span><span style="color:#032F62;">&quot;data&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">            }</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> JSONResponse(</span><span style="color:#E36209;">content</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">content)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> JSONResponse(</span><span style="color:#E36209;">content</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">qr_status_json)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">raise</span><span style="color:#24292E;"> HTTPException(</span><span style="color:#E36209;">status_code</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">500</span><span style="color:#24292E;">, </span><span style="color:#E36209;">detail</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;获取二维码状态失败&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h4 id="前端服务" tabindex="-1">前端服务 <a class="header-anchor" href="#前端服务" aria-label="Permalink to &quot;前端服务&quot;">​</a></h4><p>我们用 <code>React</code> 框架搭建一个前端页面，用于展示二维码，并实现扫码登录的功能。</p><p>界面如下:</p>`,16),C=n("p",null,[a("点击 "),n("code",null,"刷新二维码"),a(" 按钮可以重新生成二维码。")],-1),B=n("p",null,[a("扫码登录成功后，后端服务和前端服务均可以拿到 "),n("code",null,"ck"),a("。")],-1),D=n("h3",{id:"功能验证",tabindex:"-1"},[a("功能验证 "),n("a",{class:"header-anchor",href:"#功能验证","aria-label":'Permalink to "功能验证"'},"​")],-1),f=n("p",null,"这里就不过多文字描述了。直接看动图",-1),v=n("p",null,"这样就可以直接部署到服务器上，实现扫码登录了。",-1);function k(x,T,j,P,S,N){const o=d,l=i("ClientOnly"),t=r,c=E;return u(),F("div",null,[q,s(l,null,{default:p(()=>[s(o,{src:"/images/reverse/jsreverse/xhs-scan-login/1.png",alt:"vscode-debugger-1"})]),_:1}),b,m,s(l,null,{default:p(()=>[s(o,{src:"/images/reverse/jsreverse/xhs-scan-login/2.png",alt:"vscode-debugger-1"})]),_:1}),h,A,s(l,null,{default:p(()=>[s(o,{src:"/images/reverse/jsreverse/xhs-scan-login/3.png",alt:"vscode-debugger-1"})]),_:1}),g,s(l,null,{default:p(()=>[s(o,{src:"/images/reverse/jsreverse/xhs-scan-login/4.png",alt:"vscode-debugger-1"})]),_:1}),C,B,s(l,null,{default:p(()=>[s(o,{src:"/images/reverse/jsreverse/xhs-scan-login/6.png",alt:"vscode-debugger-1"})]),_:1}),D,f,s(l,null,{default:p(()=>[s(o,{src:"/images/reverse/jsreverse/xhs-scan-login/5.gif",alt:"vscode-debugger-1"})]),_:1}),v,s(l,null,{default:p(()=>[s(t)]),_:1}),s(l,null,{default:p(()=>[s(c)]),_:1})])}const L=y(_,[["render",k]]);export{G as __pageData,L as default};
